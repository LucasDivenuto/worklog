name: Deploy Worklog

on:
  push:
    branches:
      - master

jobs:
  # ---------- FRONTEND ----------
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        working-directory: frontend
        run: npm install

      - name: Build frontend
        working-directory: frontend
        run: CI=false npm run build

      - name: Debug build hash
        working-directory: frontend/build
        run: |
          echo "=== INDEX.HTML CONTENT ==="
          head -n 20 index.html | grep main
          echo "=== STATIC FILES IN JS ==="
          ls -lh static/js

      - name: Deploy frontend to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_FRONTEND_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "frontend/build/**"
          target: "/home/ubuntu/worklog_build"

      - name: Reload frontend with nginx
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_FRONTEND_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo rm -rf /var/www/html/*
            sudo rm -rf /home/ubuntu/worklog_build/*
            sudo cp -r /home/ubuntu/worklog_build/* /var/www/html/
            sudo systemctl reload nginx

  # ---------- BACKEND ----------
  backend:
    runs-on: ubuntu-latest
    needs: frontend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Build Docker image
        working-directory: backend
        run: docker build -t backend:${{ github.sha }} .

      - name: Log in to AWS ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region us-east-2 | \
          docker login --username AWS --password-stdin 724772062675.dkr.ecr.us-east-2.amazonaws.com

      - name: Tag & Push to ECR
        run: |
          docker tag backend:${{ github.sha }} 724772062675.dkr.ecr.us-east-2.amazonaws.com/backend:${{ github.sha }}
          docker push 724772062675.dkr.ecr.us-east-2.amazonaws.com/backend:${{ github.sha }}

      - name: Get ECR login password
        id: ecr-login
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "token=$(aws ecr get-login-password --region us-east-2)" >> $GITHUB_OUTPUT

      - name: Deploy Backend on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_BACKEND_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "${{ steps.ecr-login.outputs.token }}" | \
              sudo docker login --username AWS --password-stdin 724772062675.dkr.ecr.us-east-2.amazonaws.com

            sudo docker stop backend || true
            sudo docker rm backend || true
            sudo docker pull 724772062675.dkr.ecr.us-east-2.amazonaws.com/backend:${{ github.sha }}
            sudo docker run -d --restart=always --name backend -p 8080:8080 \
              724772062675.dkr.ecr.us-east-2.amazonaws.com/backend:${{ github.sha }}
